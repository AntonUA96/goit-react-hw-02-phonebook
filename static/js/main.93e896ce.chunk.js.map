{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactsList.js","components/Filter/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","phone","name","ContactForm","state","handleChangeForm","target","value","setState","handleFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuidv4","onChekUnique","alert","resetForm","this","onSubmit","type","placeholder","onChange","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","number","handleAddContacts","newContact","handleCheckUniqueContact","checkContacts","find","handleRemoveContact","handleFilterChange","getVisibleContacts","toLowerCase","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.93e896ce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { v4 as uuidv4} from 'uuid';\n\nconst INITIAL_STATE = {\n    phone: '',\n    name: '', \n}\n\nclass ContactForm extends Component {\n    state = INITIAL_STATE;\n\nhandleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value})\n}\n\nhandleFormSubmit = (e) => {\n    e.preventDefault()\n\n    const { name, phone } = this.state;\n    const { onAdd } = this.props;\n\n    const isValidateForm = this.validateForm();\n    if(!this.validateForm) return\n    onAdd({id: uuidv4(), name, phone})\n}\n\nvalidateForm = () => {\n    const { name, phone } = this.state;\n    const { onChekUnique } = this.props;\n\n    if (!name || !phone) {\n        alert('Some file is empty')\n        return false\n    }\nreturn onChekUnique(name)\n}\n\nresetForm = () => {\n    this.setState(INITIAL_STATE);\n}\n\n    render() {\n        const { name, phone } = this.state\n        return(\n            <form onSubmit={this.handleFormSubmit}> \n                <input type='text' name='name' placeholder='Enter name' value={name} onChange={this.handleChangeForm}/>\n                <input type='text' name='phone' placeholder='Enter phone number' value={phone} onChange={this.handleChangeForm} />\n                <button type=\"submit\">Add Contact</button>\n            </form>\n        )\n    }\n}\n\nexport default ContactForm;","import React from 'react';\n\nconst ContactListItem = ({id, name, phone, onRemove}) => {\n    return <li>\n        {name}: {phone} <button onClick={() => onRemove(id)}>delete</button>\n    </li>\n}\n\nconst ContactsList = ({ contacts, onRemove}) => {\n    if (contacts.length === 0) return null\n    return (\n        <ul>\n            {contacts.map(contact => <ContactListItem {...contact} onRemove={onRemove } />)}\n        </ul>\n    )\n}\n\nexport default ContactsList;","const Filter = ({filter, onChange}) => {\n    return <input type='text' name='filter' value={filter} onChange={({target}) => onChange(target.value)} placeholder='Enter name for search' /> \n}\n\nexport default Filter;","\nimport React, { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactsList from './components/ContactList/ContactsList';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\nstate = {\n    contacts: [\n        {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n        {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n        {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n        {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n      ],\n    filter: '',\n}\n\nhandleAddContacts = (newContact) => this.setState(({ contacts }) => ({\n    contacts: [...contacts, newContact],\n}))\n\nhandleCheckUniqueContact = (name) => {\n    const { contacts } = this.state;\n\n    const checkContacts = !!contacts.find((contact) => contact.name === name)\n\n    checkContacts && alert ('This contact is already exist')\n\n    return !checkContacts\n}\n\nhandleRemoveContact = (id) => {\nthis.setState(({contacts}) => ({contacts: contacts.filter((contact) => contact.id !== id)}))\n}\n\nhandleFilterChange = (filter) => {this.setState({filter})}\n\ngetVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n}\n\n      render(){\n          const { filter} = this.state;\n          const visibleContacts = this.getVisibleContacts();\n          return (\n              <>\n             <ContactForm onAdd={this.handleAddContacts} onChekUnique={this.handleCheckUniqueContact}/>\n            <Filter filter={filter} onChange={this.handleFilterChange}/>\n\n             <ContactsList contacts={visibleContacts} onRemove={this.handleRemoveContact}/>\n             </> \n          )\n      }\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}